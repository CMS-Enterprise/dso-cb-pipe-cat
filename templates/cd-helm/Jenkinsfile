def Map properties=[
    tech: "${tech}",
    testArgs: "${test_args}",
    ghOrg: "${gh_org}",
    adoIAMRole: "${ado_iam_role}",
    deploy: [
        artifactoryPath: "${artifactory_path}",
        workDir: "${work_directory}"
    ]
] 
@Library("dso-shared-lib@main") _
def podYaml = libraryResource "podTemplates/helm-agent.yaml"
pipeline {
    agent{
        kubernetes {
            yaml podYaml
        }
    }
    stages{
        stage('GitHub Checkout') {
            steps {
                container("jnlp") {
                    // git branch: 'maven3.8-java17-std', credentialsId: 'git_token', url: 'https://github.com/CMSgov/cmscloud-infra-jenkins-examples.git'
                    checkout scmGit(branches: [[name: '*/maven3.8-java17-std']], extensions: [], userRemoteConfigs: [[credentialsId: 'git_token', url: 'https://github.com/CMSgov/cmscloud-infra-jenkins-examples.git']])
                }
            }
        }
        stage ("init"){
            steps {
                container ("jnlp"){
                    sh "echo init"
 //                       init()
                }
            }
        }
        stage ("helm deploy") {
            steps {
                container ("jnlp") {
                    sh "echo helm deploy"
                } 
            }
        }
        stage ("post-deploy maven test") {
            when { expression { tech.contains("maven") }}
            steps {
                container ("maven") {
                    script{ 
                        maven.test(properties.testArgs)
                    }
                }
            }
        }
        stage ("post-deploy dotnet test") {
            when { expression { tech.contains("dotnet") }}
            steps {
                container ("dotnet") {
                    script {
                        dotnet.test(properties.testArgs)
                    }
                }
            }
        }
    }
}